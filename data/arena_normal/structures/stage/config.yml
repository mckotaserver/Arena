# config for Brewery.jar


# -- Settings --
# Defaults are written in []

# Languagefile to be used (found in plugins/Brewery/languages)
language: ja

# If the player wakes up at /home when logging in after excessive drinking (/home plugin must be installed!) [true]
enableHome: true

# Type of the home-teleport: ['cmd: home']
# bed = Player will be teleported to his spawn bed
# 'cmd: home' = /home will be executed by the player. He has to have permissions for it without any delay!
# 'cmd: spawn' = /spawn will be executed by the player.
# 'cmd: whatever' = /whatever will be executed by the player.
homeType: 'cmd: home'

# If the player "wakes up" at a random place when offline for some time while drinking (the places have to be defined with '/brew Wakeup add' through an admin)
# The Player wakes at the nearest of two random places of his world [true]
enableWake: true

# If the Player may have to try multiple times when logging in while extremely drunk [true]
enableLoginDisallow: false

# If the Player faints shortly (gets kicked from the server) if he drinks the max amount of alcohol possible [false]
enableKickOnOverdrink: false

# If the Player vomits on high drunkeness (drops item defined below) [true]
# The item can not be collected and stays on the ground until it despawns.
enablePuke: true

# Item that is dropped multiple times uncollectable when puking [SOUL_SAND]
#pukeItem: SOUL_SAND
pukeItem: BEETROOT_SEEDS

# Time in seconds until the pukeitems despawn, (mc default is 300 = 5 min) [60]
# If the item despawn time was changed in the spigot.yml, the pukeDespawntime changes as well.
pukeDespawntime: 20

# How much the Player stumbles depending on the amount of alcohol he drank. Can be set to 0 and higher than 100 [100]
stumblePercent: 100

# Display his drunkeness to the player when he drinks a brew or eats a drainItem [true]
showStatusOnDrink: true

# Consumable Item/strength. Decreases the alcohol level by <strength> when consumed. (list)
drainItems:
- BREAD/30
- MILK_BUCKET/20

# Time (in days) that drunkeness-data stays in memory after a player goes offline, to apply hangover etc. [7]
hangoverDays: 7

# Show Particles over Cauldrons when they have ingredients and a heat source. [true]
# The changing color of the particles can help with timing some recipes
enableCauldronParticles: true

# If crafting and using of the Brew Sealing Table is enabled (2 Bottles over 4 Planks) [true, true]
craftSealingTable: true
enableSealingTable: true

# Color the Item information (lore) depending on quality while it is 1. in a barrel and/or 2. in a brewing stand [true, true]
colorInBarrels: true
colorInBrewer: true

# Always show the 1-5 stars on the item depending on the quality. If false, they will only appear when brewing [true]
alwaysShowQuality: true

# Always show the alcohol content on the item. If false, it will only show in the brewing stand [false]
alwaysShowAlc: false

# If a Large Barrel can be opened by clicking on any of its blocks, not just Spigot or Sign. This is always true for Small Barrels. [true]
openLargeBarrelEverywhere: true

# If aging in -Minecraft- Barrels in enabled [true] and how many Brewery drinks can be put into them [6]
ageInMCBarrels: true
maxBrewsInMCBarrels: 6

# The used Ingredients and other brewing-data is saved to all Brewery Items. To prevent
# hacked clients from reading what exactly was used to brew an item, the data can be encoded/scrambled.
# This is a fast process to stop players from hacking out recipes, once they get hold of a brew.
# Only drawback: brew items can only be used on another server with the same encodeKey.
# When using Brews on multiple (BungeeCord) Servers, define a shared Database below at 'multiServerDB'
# So enable this if you want to make recipe cheating harder, but don't share any brews by world download, schematics, or other means. [false]
enableEncode: false
encodeKey: -7571030309087126640

# Enable checking for Updates, Checks the curseforge api for updates to Brewery [true]
# If an Update is found a Message is logged on Server-start and displayed to OPs joining the game
updateCheck: false

# Autosave interval in minutes [3]
autosave: 3

# Show debug messages in log [false]
debug: false

# Config Version
version: '3.1'



# -- Define custom items --
# The defined id can then be used in recipes

#  matchAny: true if it is already enough if one of the info matches
#  material: Which type the item has to be
#  name: Which name the item has to be (Formatting codes possible: such as &6)
#  lore: What has to be in the lore of the item

customItems:
  # Three Example Items
  ex-item:
    # A Barrier item called Wall and has the given line in its lore
    material: Barrier
    name: 'Wall'
    lore:
      - '&7Very well protected'

  ex-item2:
    # Using matchAny only one of the following has to match.
    # In this case on of the door types, or an item called Beechwood Door, or an item with 'A door' in its lore
    matchAny: true
    material:
      - Acacia_Door
      - Oak_Door
      - Spruce_Door
    name:
      - 'Beechwood Door'
    lore:
      - 'A door'

  rasp:
    name: '&cRaspberry'

  blue-flowers: # new
    matchAny: true
    material:
      - cornflower
      - blue_orchid

# -- Ingredients in the Cauldron --
# Which Ingredients are accepted by the Cauldron and the base potion resulting from them
# You only need to add something here if you want to specify a custom name or color for the base potion

 # name: Name of the base potion coming out of the Cauldron (Formatting codes possible: such as &6)
 # ingredients: List of 'material/amount'
 #   With an item in your hand, use /brew ItemName to get its material for use in a recipe
 #   (Item-ids instead of material are not supported by bukkit anymore and will not work)
 #   A list of materials can be found here: https://hub.spigotmc.org/javadocs/spigot/org/bukkit/Material.html
 # color: Color of the base potion from a cauldron. Defaults to CYAN
 #   Usable Colors: DARK_RED, RED, BRIGHT_RED, ORANGE, YELLOW, PINK, PURPLE, BLUE, CYAN, WATER, TEAL, OLIVE, GREEN, LIME, BLACK, GREY, BRIGHT_GREY, WHITE
 #   Or RGB colors (hex: for example '99FF33') (with '') (search for "HTML color" on the internet)
 # cookParticles:
 #   Color of the Particles above the cauldron at different cooking-times
 #   Color and minute during which each color should appear, i.e. one color at 8 minutes fading to another at 18 minutes.
 #   As List, each Color as name or RGB, see above. Written as 'Color/Minute'
 #   It will fade to the last color in the end, if there is only one color in the list, it will fade to grey
 # lore: List of additional text on the base potion. (Formatting codes possible: such as &6)
 # customModelData: Custom Model Data Tag. This is a number that can be used to add custom textures to the item.

cauldron:
  # Example with all possible entries
  ex:
    name: Example
    ingredients:
      - Bedrock/2
      - Diamond
    color: BLACK
    cookParticles:
      - 'RED/5'
      - 'WHITE/10'
      - '800000/25' # maroon
    lore:
      - An example for a Base Potion
      - This is how it comes out of a Cauldron
    customModelData: 545

  # -- One Ingredient: --
  wheat:
    name: 発酵小麦
    ingredients: Wheat
    cookParticles:
      - '2d8686/8' # Dark Aqua
    customModelData: 1040000

  sugarcane:
    name: 発酵サトウキビ
    ingredients: Sugar_Cane
    color: 'f1ffad' # yellowish green
    cookParticles:
      - 'f1ffad/4'
      - '858547/10' # dark olive
    customModelData: 1040010

  sugar:
    name: 砂糖水
    ingredients: Sugar
    cookParticles:
      - 'WHITE/4'
      - 'BRIGHT_GREY/25'
    customModelData: 1040020

  apple:
    name: りんごジュース
    ingredients: Apple
    customModelData: 1040030

  berries:
    name: ベリージュース
    ingredients: Sweet_Berries
    color: RED
    cookParticles:
      - 'ff6666/2' # bright red
      - 'RED/7'
      - 'ac6553/13' # brown-red
    customModelData: 1040050

  potato:
    name: ポテトマッシュ
    ingredients: Potato
    customModelData: 1040040

  grass:
    name: 煮詰めたハーブ
    ingredients: Grass
    color: '99ff66' # bright green
    cookParticles:
      - 'GREEN/2'
      - '99ff99/20' # faded green
    customModelData: 1040060

  cocoa:
    name: 発酵カカオ豆
    ingredients: Cocoa_Beans
    color: '804600' # mocca
    cookParticles:
      - 'a26011/1'
      - '5c370a/3'
      - '4d4133/8' # Gray-brown
    customModelData: 1040070

  milk:
    name: ミルク
    ingredients: Milk_Bucket
    color: BRIGHT_GREY
    cookParticles:
      - 'fbfbd0/1' # yellow-white
      - 'WHITE/6'
    customModelData: 1040080

  cactus:
    name: 発酵アガベ
    ingredients: cactus
    color: '00b300' # cactus green
    cookParticles:
      - '00b300/16'
    customModelData: 1040090

  vine:
    name: 煮詰めたハーブ
    ingredients: vine
    color: '99ff66' # bright green
    cookParticles:
      - 'GREEN/2'
      - '99ff99/20' # faded green
    customModelData: 1040060

  melon:
    name: メロンジュース
    ingredients: melon_slice
    customModelData: 1040100

  snowball:
    name: 氷水
    ingredients: Snowball
    customModelData: 1040110

  glowstone_dust:
    name: 輝く汁
    ingredients: Glowstone_Dust
    color: 'ffff33' # bright yellow
    cookParticles:
      - 'ffff99/3'
      - 'd9d926/15' # faded yellow
    customModelData: 1040120

  applemead_base:
    name: 甘く煮詰めたリンゴジュース
    ingredients:
      - Sugar_Cane/3
      - Apple
    color: 'e1ff4d' # greenish yellow
    cookParticles:
      - 'e1ff4d/4'
    customModelData: 1040130

  juniper:
    name: 発酵したジュニパーベリー
    ingredients:
      - blue-flowers
      - wheat
    color: '00ccff' # aqua
    cookParticles:
      - '00ccff/8'
    customModelData: 1040140

  gin_base:
    name: フルーティーな発酵したジュニパーベリー
    ingredients:
      - Brewery:juniper
      - apple
    color: '66e0ff' # lighter aqua
    cookParticles:
      - '00ccff/5'
    customModelData: 1040150



# -- Recipes for Potions --

# name: Different names for bad/normal/good (Formatting codes possible: such as &6)
# ingredients: List of 'material/amount'
#   With an item in your hand, use /brew ItemName to get its material for use in a recipe
#   (Item-ids instead of material are not supported by bukkit anymore and will not work)
#   A list of materials can be found here: https://hub.spigotmc.org/javadocs/spigot/org/bukkit/Material.html
#   Plugin items with 'plugin:id' (Currently supporting ExoticGarden, Slimefun, MMOItems, Brewery)
#   Or a custom item defined above
# cookingtime: Time in real minutes ingredients have to boil
# distillruns: How often it has to be distilled for full alcohol (0=without distilling)
# distilltime: How long (in seconds) one distill-run takes (0=Default time of 40 sec) MC Default would be 20 sec
# wood: Wood of the barrel 0=any 1=Birch 2=Oak 3=Jungle 4=Spruce 5=Acacia 6=Dark Oak 7=Crimson 8=Warped
#   The Minecraft barrel is made of oak
# age: Time in Minecraft-days, the potion has to age in a barrel 0=no aging
# color: Color of the potion after distilling/aging.
#   Usable Colors: DARK_RED, RED, BRIGHT_RED, ORANGE, PINK, BLUE, CYAN, WATER, GREEN, BLACK, GREY, BRIGHT_GREY
#   Or RGB colors (hex: for example '99FF33') (with '') (search for "HTML color" on the internet)
# difficulty: 1-10 accuracy needed to get good quality (1 = unaccurate/easy, 10 = very precise/hard)
# alcohol: Absolute amount of alcohol 0-100 in a perfect potion (will be added directly to the player, where 100 means fainting)
# lore: List of additional text on the finished brew. (Formatting codes possible: such as &6)
#   Specific lore for quality possible, using + bad, ++ normal, +++ good, added to the front of the line.
# servercommands: List of Commands executed by the -Server- when drinking the brew (Can use %player_name%  %quality%)
# playercommands: List of Commands executed by the -Player- when drinking the brew (Can use %player_name%  %quality%)
#   Specific Commands for quality possible, using + bad, ++ normal, +++ good, added to the front of the line.
# drinkmessage: Chat-message to the Player when drinking the Brew
# drinktitle: Title on Screen to the Player when drinking the Brew
# customModelData: Custom Model Data Tag. This is a number that can be used to add custom textures to the item.
#   Can specify one for all, or one for each quality, separated by /
# effects: List of effect/level/duration  Special potion-effect when drinking, duration in sek.
#   Possible Effects: https://hub.spigotmc.org/javadocs/spigot/org/bukkit/potion/PotionEffectType.html
#   Level or Duration ranges may be specified with a "-", ex. 'SPEED/1-2/30-40' = lvl 1 and 30 sec at worst and lvl 2 and 40 sec at best
#   Ranges also work high-low, ex. 'POISON/3-1/20-5' for weaker effects at good quality.
#   Highest possible Duration: 1638 sec. Instant Effects dont need any duration specified.

recipes:
#  Example Recipe with every possible entry first:

  ex:
    name: '失敗したサンプル/標準的なサンプル/上出来のサンプル'
    ingredients:
      - Diamond/1
      - Spruce_Planks/8
      - Bedrock/1
      - Brewery:Wheatbeer/2
      - ex-item/4
    cookingtime: 3
    distillruns: 2
    distilltime: 60
    wood: 4
    age: 11
    color: DARK_RED
    difficulty: 3
    alcohol: 14
    lore:
      - This is an examble brew
      - ++Just a normal Example
      - This text would be on the brew
      - + Smells disgusting
      - ++ Smells alright
      - +++ Smells really good
    servercommands:
      - +++ weather clear
      - + weather rain
    playercommands:
      - homes
    drinkmessage: Tastes good
    drinktitle: Warms you from inside
    customModelData: 556/557/557
    effects:
      - FIRE_RESISTANCE/20
      - HEAL/1
      - WEAKNESS/2-3/50-60
      - POISON/1-0/20-0

  wheatbeer:
    name: '&7臭い白ビール/&7白ビール/&7美味い白ビール'
    ingredients:
      - Wheat/4
    cookingtime: 8
    distillruns: 0
    wood: 1
    age: 2
    color: 'f9ee7e' # white_yellow
    difficulty: 1
    alcohol: 5
    lore: +++ &8Refreshing
    customModelData: 1050000/1050001/1050002

  beer:
    name: '&6臭いビール/&6ビール/&6美味いビール'
    ingredients:
      - Wheat/6
    cookingtime: 8
    distillruns: 0
    wood: 0
    age: 3
    color: 'faa132' # Bright Orange
    difficulty: 1
    lore:
      - +++ &8Crisp taste
    alcohol: 5
    customModelData: 1050010/1050011/1050012

  darkbeer:
    name: '&8臭い黒ビール/&8黒ビール/&8美味い黒ビール'
    ingredients:
      - Wheat/8
    cookingtime: 8
    distillruns: 0
    wood: 6
    age: 8
    color: '650013' # Dark Red-Brown
    difficulty: 2
    lore:
      - +++ &8Roasted taste
    alcohol: 7
    customModelData: 1050020/1050021/1050022

  mead:
    name: '&e不味い蜂蜜酒/&e蜂蜜酒/&6黄金色の蜂蜜酒'
    ingredients:
      - HONEY_BOTTLE/6
    cookingtime: 3
    distillruns: 0
    wood: 2
    age: 4
    color: 'fff6c0'
    difficulty: 2
    lore:
      - +++ &8もしかして甘党？
    alcohol: 11
    customModelData: 1050030/1050031/1050032

  ap_mead:
    name: '&cリンゴ蜂蜜酒/&c甘いリンゴ蜂蜜酒/&6黄金色の甘いリンゴ蜂蜜酒'
    ingredients:
      - HONEY_BOTTLE/10
      - Apple/2
    cookingtime: 4
    distillruns: 0
    wood: 2
    age: 4
    color: ORANGE
    difficulty: 4
    alcohol: 11
    lore:
      - +Is there any Apple in this?
      - ++Refreshing taste of Apple
      - +++Sweetest hint of Apple
    effects:
      - WATER_BREATHING/1-2/150
    customModelData: 1050040/1050041/1050042

  redwine:
    name: 赤ワイン
    ingredients:
      - Sweet_Berries/5
    cookingtime: 5
    distillruns: 0
    wood: 0
    age: 20
    color: 450409
    difficulty: 4
    alcohol: 14
    lore:
      - '+ &8Harsh'
    customModelData: 1050050

  whitewine:
    name: 白ワイン
    ingredients:
      - glow_Berries/5
    cookingtime: 5
    distillruns: 0
    wood: 0
    age: 20
    color: f7e2bf
    difficulty: 5
    alcohol: 12
    lore:
      - '+ &8Harsh'
    customModelData: 1050060

  cidre:
    name: 渋いシードル/シードル/上質なシードル
    ingredients:
      - Apple/14
    cookingtime: 7
    distillruns: 0
    wood: 0
    age: 3
    color: 'f86820' # Red-Orange
    difficulty: 4
    alcohol: 7
    customModelData: 1050070/1050071/1050072

  apple_liquor:
    name: 低品質なアップルリキュール/アップルリキュール/カルヴァドス
    ingredients:
      - Apple/4
      - Sugar/16
    cookingtime: 16
    distillruns: 3
    wood: 5
    age: 6
    color: 501908
    difficulty: 5
    alcohol: 14
    lore:
      - +Sour like Acid
      - +++ Good Apple Liquor
    customModelData: 1050080/1050081/1050082

  whiskey:
    name: 低品質なウイスキー/ウイスキー/スコッチウイスキー
    ingredients:
      - Wheat/10
    cookingtime: 10
    distillruns: 2
    distilltime: 50
    wood: 4
    age: 18
    color: ORANGE
    difficulty: 7
    alcohol: 40
    lore: '&7Single Malt'
    customModelData: 1050090/1050091/1050092

  rum:
    name: '&4苦いラム酒/&4辛口ラム酒/&6黄金色のラム酒'
    ingredients:
      - Sugar_Cane/18
    cookingtime: 6
    distillruns: 2
    distilltime: 30
    wood: 2
    age: 14
    color: DARK_RED
    difficulty: 6
    alcohol: 30
    effects:
      - FIRE_RESISTANCE/1/20-100
      - POISON/1-0/30-0
    lore:
      - +&8Too bitter to drink
      - ++&8Spiced by the barrel
      - +++&eSpiced Gold
    customModelData: 1050100/1050101/1050102

  vodka:
    name: '&3粗末なウォッカ/&3ウォッカ/&3ロシアンウォッカ'
    ingredients:
      - Potato/10
    cookingtime: 15
    distillruns: 3
    age: 0
    color: WHITE
    difficulty: 4
    alcohol: 20
    lore: + &8Almost undrinkable
    effects:
      - WEAKNESS/15
      - POISON/10
    customModelData: 1050110/1050111/1050112

  gin:
    name: 薄いジン/ジン/オールド・トム・ジン
    ingredients:
      - Wheat/9
      - blue-flowers/6  # Custom-Item: Blue Orchids or Cornflowers
      - Apple/1
      - Brewery:gin_base
    cookingtime: 6
    distillruns: 2
    color: '99ddff' # Very light blue
    difficulty: 6
    alcohol: 20
    lore:
      - ++ With the
      - ++ taste of juniper
      - +++ Perfectly finished off
      - +++ with juniper
    effects:
      - WEAKNESS/15
      - HEALTH_BOOST/0-2/30-180
    customModelData: 1050120/1050121/1050122

  tequila:
    name: メスカル/テキーラ/テキーラ・アネホ
    ingredients:
      - Brewery:cactus/8
    cookingtime: 15
    distillruns: 2
    color: 'f5f07e' # Green-Orange
    difficulty: 5
    wood: 1
    age: 12
    alcohol: 20
    lore: Desert spirit
    customModelData: 1050130/1050131/1050132

  absinthe:
    name: '&2劣化アブサン/&2アブサン/&2濃厚アブサン'
    ingredients:
      - oxeye_daisy/4
      - dandelion/4
      - GRASS/8
    cookingtime: 3
    distillruns: 6
    distilltime: 80
    color: GREEN
    difficulty: 8
    alcohol: 42
    effects:
      - POISON/15-25
    lore: '+++&8High proof liquor'
    customModelData: 1050140/1050141/1050142

  gr_absinthe:
    name: '&2高品質な劣化アブサン/&2高品質なアブサン/&2高品質な濃厚アブサン'
    ingredients:
      - oxeye_daisy/6
      - dandelion/6
      - GRASS/16
      - Brewery:vine
    cookingtime: 5
    distillruns: 6
    distilltime: 85
    color: LIME
    difficulty: 10
    alcohol: 55
    effects:
      - POISON/25-40
      - HARM/2
      - NIGHT_VISION/40-60
    lore: '&aLooks poisonous'
    customModelData: 1050150/1050151/1050152

  pork_soop:
    name: '&e薄味豚汁/&e豚汁/&6金色に輝く豚汁'
    ingredients:
      - COOKED_PORKCHOP/3
      - CARROT/2
      - POTATO/2
      - beetroot/2
      - sugar/1
    cookingtime: 9
    color: ORANGE
    difficulty: 5
    alcohol: -6
    effects:
      - WEAKNESS/2-0/30-0
      - luck/0-2/10-60
      - glowing/0/10-60
    customModelData: 1050160/1050161/1050162

  coffee:
    name: '&6酸っぱいコーヒー/&6コーヒー/&6コクのあるコーヒー'
    ingredients:
      - Cocoa_Beans/12
      - Milk_Bucket/2
    cookingtime: 2
    color: BLACK
    difficulty: 3
    alcohol: -2
    lore: + &8Probably a week old
    effects:
      - REGENERATION/1/2-5
      - SPEED/1/30-140
    customModelData: 1050170/1050171/1050172

  potato_soup:
    name: '&6ポテトが固いスープ/&6ポテトスープ/&6美味しいポテトスープ'
    ingredients:
      - Potato/5
      - Grass/3
    cookingtime: 3
    color: ORANGE
    difficulty: 1
    effects:
      - HEAL/0-1
    customModelData: 1050180/1050181/1050182

  spirytus:
    name: '&7ほぼエタノール/&2スピリタス/&a最高純度のスピリタス'
    ingredients:
      - wheat/12
      - POTATO/16
    cookingtime: 9
    distillruns: 70
    distilltime: 10
    color: GREEN
    difficulty: 10
    alcohol: 95
    effects:
      - FAST_DIGGING/0-3/60-300
      - JUMP/0-3/10-30
      - POISONX/1-0/30-0
      - BLINDNESS/0/30-10
      - glowing/0/30-240
    customModelData: 1050190/1050191/1050192

  apple_saida:
    name: '&c炭酸の抜けたアップルサイダー/&cアップルサイダー/&4強炭酸アップルサイダー'
    ingredients:
      - apple/5
      - sugar/3
    cookingtime: 4
    wood: 3
    age: 2
    color: RED
    difficulty: 2
    effects:
      - INCREASE_DAMAGE/0-1/30-180
      - unluck/3-1/60-0
    customModelData: 1050200/1050201/1050202

# More Recipes ideas: Cachaca, Gin, Whiskey, Tequila, Cider, etc. as well as high quality abbreviations like golden vodka etc.
# I will not add more Recipes to the default config, as they would be public and viewable by users to cheat.
# It is up to the Serveradmin to change and add Recipes, so players cannot cheat from the default config.







# -- Plugin Compatibility --

# Enable checking of other Plugins (if installed) for Barrel Permissions [true]
# Plugins 'Landlord' and 'Protection Stones' use the WorldGuard Flag. 'ClaimChunk' is natively supported.
useWorldGuard: true
useLWC: true
useGriefPrevention: true
useTowny: true
useBlockLocker: true
useGMInventories: true

# Use a virtual chest when opening a Barrel to check with all other protection plugins
# This could confuse Anti-Cheat plugins, but is otherwise good to use
# use this for 'Residence' Plugin and any others that don't check all cases in the PlayerInteractEvent
useVirtualChestPerms: false


# Enable the Logging of Barrel Inventories to LogBlock [true]
useLogBlock: true


# -- MultiServer/BungeeCord --
# If Brewery is running on multiple connected Servers (via BungeeCord)
# a shared Database can be used here to synchronise drunkeness and to be able to use encoded brews between them.

multiServerDB:
  # If using the Database is enabled
  enabled: true
  # If the drunkeness of players should be synchronised between Servers
  syncDrunkeness: true
  host: localhost
  port: '3306'
  user: root
  password: js8ew2
  database: brewery


# -- Various Other Settings --

# If items in Offhand should be added to the cauldron as well [false]
useOffhandForCauldron: false

# If Barrel and Cauldron data can be loaded Async/in the Background [true]
loadDataAsync: true

# If Cauldron Particles should be reduced to the bare minimum [false]
minimalParticles: false

# Allow emptying brews into hoppers to discard brews while keeping the glass bottle [true]
brewHopperDump: true


# -- Chat Distortion Settings --

# If written Chat is distorted when the Player is Drunk,
# so that it looks like drunk writing
# How much the chat is distorted depends on how drunk the Player is
# Below are settings for what and how changes in chat occur
enableChatDistortion: true

# Log to the Serverlog what the player actually wrote, before his words were altered [false]
logRealChat: false

# Text after specified commands will be distorted when drunk (list) [- /gl]
distortCommands:
- /gl
- /global
- /fl
- /s
- /letter
- /g
- /l
- /lokal
- /local
- /mail send
- /m
- /msg
- /w
- /whisper
- /reply
- /r
- /t
- /tell

# Distort the Text written on a Sign while drunk [false]
distortSignText: false

# Enclose a Chat text with these Letters to bypass Chat Distortion (Use "," as Separator) (list) [- '[,]']
# Chat Example: Hello i am drunk *I am testing Brewery*
distortBypass:
- '*,*'
- '[,]'

# words: Words and letters that will be altered when chatting while being drunk.
# Will be processed from first to last and a written sentece is altered in that order.

# replace: Word or letter to be replaced. (Special: "-space": replaces space, "-random": insert into random position, "-all": everything, "-start": At Beginning, "-end": At the End.)
# to: What to replace it with.
# pre: Words and Letters before the wanted word (split with ",")
# match: true = one of the "pre"-Words has to be before the wanted Word,  false = none of the "pre" Words is allowed before the wanted Word
# alcohol: 1-100 minimum drunkeness after which this word ist replaced
# percentage: Probability of replacing a Word in percent

words:
-  replace: 'し'
   to: 'しゅ'
   percentage: 90
   alcohol: 30

-  replace: 'ち'
   to: 'ちゃ'
   pre: u,s,o,a
   match: false
   alcohol: 10
   percentage: 70

-  replace: 'ひ'
   to: 'ひゃ'
   pre: sch,h,t
   match: false
   percentage: 60
   alcohol: 20

-  replace: 'さ'
   to: 'しゃ'
   percentage: 40
   alcohol: 30

-  replace: 'な'
   to: 'にゃ'
   percentage: 60
   alcohol: 40

-  replace: 'り'
   to: 'りゅ'
   percentage: 20

-  replace: 'よ'
   to: 'りょ'
   percentage: 60
   alcohol: 15

-  replace: '!!!'
   to: '!!!111!!!eleven!1!'
   pre: '!'
   match: false
   percentage: 20
   alcohol: 70

-  replace: '!'
   to: '!!'
   pre: '!'
   match: false
   percentage: 90

-  replace: '?'
   to: '????'
   pre: '?'
   match: false
   percentage: 80
   alcohol: 40

-  replace: -end
   to: '!'
   percentage: 40
   alcohol: 30

-  replace: -random
   to: ' *ﾋｭｨｯｸ!* '
   percentage: 5
   alcohol: 70

-  replace: -random
   to: ' *ｯｸ* '
   percentage: 15
   alcohol: 40

-  replace: -space
   to: ' *ﾋｯ* '
   percentage: 5
   alcohol: 20

-  replace: -end
   to: ' *ﾋｯｸ*'
   percentage: 20
   alcohol: 50

-  replace: -all
   to: '*ｸﾞｴｯ..*'
   percentage: 3
   alcohol: 60

-  replace: -all
   to: '*ｹﾞﾌ..*'
   percentage: 6
   alcohol: 80